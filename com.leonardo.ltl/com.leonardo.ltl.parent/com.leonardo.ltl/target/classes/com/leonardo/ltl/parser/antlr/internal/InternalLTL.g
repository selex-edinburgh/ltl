/*
 * generated by Xtext 2.31.0
 */
grammar InternalLTL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.leonardo.ltl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.leonardo.ltl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.leonardo.ltl.services.LTLGrammarAccess;

}

@parser::members {

 	private LTLGrammarAccess grammarAccess;

    public InternalLTLParser(TokenStream input, LTLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected LTLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getPackagesPackageParserRuleCall_1_0());
				}
				lv_packages_1_0=rulePackage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"packages",
						lv_packages_1_0,
						"com.leonardo.ltl.LTL.Package");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.leonardo.ltl.LTL.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPackageAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPackageAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPackageAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='description'
								{
									newLeafNode(otherlv_3, grammarAccess.getPackageAccess().getDescriptionKeyword_2_0_0());
								}
								(
									(
										lv_description_4_0=RULE_STRING
										{
											newLeafNode(lv_description_4_0, grammarAccess.getPackageAccess().getDescriptionSTRINGTerminalRuleCall_2_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPackageRule());
											}
											setWithLastConsumed(
												$current,
												"description",
												lv_description_4_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPackageAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPackageAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPackageAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getPackageAccess().getPackagableElementsPackagableElementParserRuleCall_2_1_0());
									}
									lv_packagableElements_5_0=rulePackagableElement
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getPackageRule());
										}
										add(
											$current,
											"packagableElements",
											lv_packagableElements_5_0,
											"com.leonardo.ltl.LTL.PackagableElement");
										afterParserOrEnumRuleCall();
									}
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPackageAccess().getUnorderedGroup_2());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPackageAccess().getUnorderedGroup_2());
				}
		)
		otherlv_6='end'
		{
			newLeafNode(otherlv_6, grammarAccess.getPackageAccess().getEndKeyword_3());
		}
	)
;

// Entry rule entryRulePackagableElement
entryRulePackagableElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackagableElementRule()); }
	iv_rulePackagableElement=rulePackagableElement
	{ $current=$iv_rulePackagableElement.current; }
	EOF;

// Rule PackagableElement
rulePackagableElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPackagableElementAccess().getTestExecutionParserRuleCall_0());
		}
		this_TestExecution_0=ruleTestExecution
		{
			$current = $this_TestExecution_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPackagableElementAccess().getTestableEntityParserRuleCall_1());
		}
		this_TestableEntity_1=ruleTestableEntity
		{
			$current = $this_TestableEntity_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPackagableElementAccess().getTestRequirementParserRuleCall_2());
		}
		this_TestRequirement_2=ruleTestRequirement
		{
			$current = $this_TestRequirement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPackagableElementAccess().getTestSpecificationParserRuleCall_3());
		}
		this_TestSpecification_3=ruleTestSpecification
		{
			$current = $this_TestSpecification_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTestSpecification
entryRuleTestSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestSpecificationRule()); }
	iv_ruleTestSpecification=ruleTestSpecification
	{ $current=$iv_ruleTestSpecification.current; }
	EOF;

// Rule TestSpecification
ruleTestSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTestSpecificationAccess().getTestSuiteParserRuleCall_0());
		}
		this_TestSuite_0=ruleTestSuite
		{
			$current = $this_TestSuite_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTestSpecificationAccess().getTestCaseParserRuleCall_1());
		}
		this_TestCase_1=ruleTestCase
		{
			$current = $this_TestCase_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTestableEntity
entryRuleTestableEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestableEntityRule()); }
	iv_ruleTestableEntity=ruleTestableEntity
	{ $current=$iv_ruleTestableEntity.current; }
	EOF;

// Rule TestableEntity
ruleTestableEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTestableEntityAccess().getTestableEntityAction_0(),
					$current);
			}
		)
		otherlv_1='entity'
		{
			newLeafNode(otherlv_1, grammarAccess.getTestableEntityAccess().getEntityKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTestableEntityAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestableEntityRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.leonardo.ltl.LTL.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getTestableEntityAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestableEntityAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestableEntityAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='description'
								{
									newLeafNode(otherlv_4, grammarAccess.getTestableEntityAccess().getDescriptionKeyword_3_0_0());
								}
								(
									(
										lv_description_5_0=RULE_STRING
										{
											newLeafNode(lv_description_5_0, grammarAccess.getTestableEntityAccess().getDescriptionSTRINGTerminalRuleCall_3_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestableEntityRule());
											}
											setWithLastConsumed(
												$current,
												"description",
												lv_description_5_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestableEntityAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestableEntityAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestableEntityAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='version'
								{
									newLeafNode(otherlv_6, grammarAccess.getTestableEntityAccess().getVersionKeyword_3_1_0());
								}
								(
									(
										lv_version_7_0=RULE_STRING
										{
											newLeafNode(lv_version_7_0, grammarAccess.getTestableEntityAccess().getVersionSTRINGTerminalRuleCall_3_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestableEntityRule());
											}
											setWithLastConsumed(
												$current,
												"version",
												lv_version_7_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestableEntityAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getTestableEntityAccess().getUnorderedGroup_3());
				}
		)
		otherlv_8='end'
		{
			newLeafNode(otherlv_8, grammarAccess.getTestableEntityAccess().getEndKeyword_4());
		}
	)
;

// Entry rule entryRuleTestRequirement
entryRuleTestRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestRequirementRule()); }
	iv_ruleTestRequirement=ruleTestRequirement
	{ $current=$iv_ruleTestRequirement.current; }
	EOF;

// Rule TestRequirement
ruleTestRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTestRequirementAccess().getTestRequirementAction_0(),
					$current);
			}
		)
		otherlv_1='requirement'
		{
			newLeafNode(otherlv_1, grammarAccess.getTestRequirementAccess().getRequirementKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTestRequirementAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestRequirementRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.leonardo.ltl.LTL.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='description'
								{
									newLeafNode(otherlv_4, grammarAccess.getTestRequirementAccess().getDescriptionKeyword_3_0_0());
								}
								(
									(
										lv_description_5_0=RULE_STRING
										{
											newLeafNode(lv_description_5_0, grammarAccess.getTestRequirementAccess().getDescriptionSTRINGTerminalRuleCall_3_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestRequirementRule());
											}
											setWithLastConsumed(
												$current,
												"description",
												lv_description_5_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='version'
								{
									newLeafNode(otherlv_6, grammarAccess.getTestRequirementAccess().getVersionKeyword_3_1_0());
								}
								(
									(
										lv_version_7_0=RULE_STRING
										{
											newLeafNode(lv_version_7_0, grammarAccess.getTestRequirementAccess().getVersionSTRINGTerminalRuleCall_3_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestRequirementRule());
											}
											setWithLastConsumed(
												$current,
												"version",
												lv_version_7_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_8='entity'
								{
									newLeafNode(otherlv_8, grammarAccess.getTestRequirementAccess().getEntityKeyword_3_2_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestRequirementRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getTestRequirementAccess().getTestableEntityTestableEntityCrossReference_3_2_1_0());
										}
										ruleQualifiedName
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getTestRequirementAccess().getUnorderedGroup_3());
				}
		)
		otherlv_10='end'
		{
			newLeafNode(otherlv_10, grammarAccess.getTestRequirementAccess().getEndKeyword_4());
		}
	)
;

// Entry rule entryRuleTestSuite
entryRuleTestSuite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestSuiteRule()); }
	iv_ruleTestSuite=ruleTestSuite
	{ $current=$iv_ruleTestSuite.current; }
	EOF;

// Rule TestSuite
ruleTestSuite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTestSuiteAccess().getTestSuiteAction_0(),
					$current);
			}
		)
		otherlv_1='suite'
		{
			newLeafNode(otherlv_1, grammarAccess.getTestSuiteAccess().getSuiteKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTestSuiteAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestSuiteRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.leonardo.ltl.LTL.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='description'
								{
									newLeafNode(otherlv_4, grammarAccess.getTestSuiteAccess().getDescriptionKeyword_3_0_0());
								}
								(
									(
										lv_description_5_0=RULE_STRING
										{
											newLeafNode(lv_description_5_0, grammarAccess.getTestSuiteAccess().getDescriptionSTRINGTerminalRuleCall_3_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestSuiteRule());
											}
											setWithLastConsumed(
												$current,
												"description",
												lv_description_5_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='date'
								{
									newLeafNode(otherlv_6, grammarAccess.getTestSuiteAccess().getDateKeyword_3_1_0());
								}
								(
									(
										lv_date_7_0=RULE_STRING
										{
											newLeafNode(lv_date_7_0, grammarAccess.getTestSuiteAccess().getDateSTRINGTerminalRuleCall_3_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestSuiteRule());
											}
											setWithLastConsumed(
												$current,
												"date",
												lv_date_7_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_8='version'
								{
									newLeafNode(otherlv_8, grammarAccess.getTestSuiteAccess().getVersionKeyword_3_2_0());
								}
								(
									(
										lv_version_9_0=RULE_STRING
										{
											newLeafNode(lv_version_9_0, grammarAccess.getTestSuiteAccess().getVersionSTRINGTerminalRuleCall_3_2_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestSuiteRule());
											}
											setWithLastConsumed(
												$current,
												"version",
												lv_version_9_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_10='cases'
								{
									newLeafNode(otherlv_10, grammarAccess.getTestSuiteAccess().getCasesKeyword_3_3_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestSuiteRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getTestSuiteAccess().getTestSpecificationsTestSpecificationCrossReference_3_3_1_0());
										}
										ruleQualifiedName
										{
											afterParserOrEnumRuleCall();
										}
									)
								)*
								otherlv_12='end'
								{
									newLeafNode(otherlv_12, grammarAccess.getTestSuiteAccess().getEndKeyword_3_3_2());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>(otherlv_13='entities'
								{
									newLeafNode(otherlv_13, grammarAccess.getTestSuiteAccess().getEntitiesKeyword_3_4_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestSuiteRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getTestSuiteAccess().getTestableEntitiesTestableEntityCrossReference_3_4_1_0());
										}
										ruleQualifiedName
										{
											afterParserOrEnumRuleCall();
										}
									)
								)*
								otherlv_15='end'
								{
									newLeafNode(otherlv_15, grammarAccess.getTestSuiteAccess().getEndKeyword_3_4_2());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getTestSuiteAccess().getUnorderedGroup_3());
				}
		)
		otherlv_16='end'
		{
			newLeafNode(otherlv_16, grammarAccess.getTestSuiteAccess().getEndKeyword_4());
		}
	)
;

// Entry rule entryRuleTestCase
entryRuleTestCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestCaseRule()); }
	iv_ruleTestCase=ruleTestCase
	{ $current=$iv_ruleTestCase.current; }
	EOF;

// Rule TestCase
ruleTestCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTestCaseAccess().getTestCaseAction_0(),
					$current);
			}
		)
		otherlv_1='case'
		{
			newLeafNode(otherlv_1, grammarAccess.getTestCaseAccess().getCaseKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTestCaseAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestCaseRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.leonardo.ltl.LTL.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='description'
								{
									newLeafNode(otherlv_4, grammarAccess.getTestCaseAccess().getDescriptionKeyword_3_0_0());
								}
								(
									(
										lv_description_5_0=RULE_STRING
										{
											newLeafNode(lv_description_5_0, grammarAccess.getTestCaseAccess().getDescriptionSTRINGTerminalRuleCall_3_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											setWithLastConsumed(
												$current,
												"description",
												lv_description_5_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='date'
								{
									newLeafNode(otherlv_6, grammarAccess.getTestCaseAccess().getDateKeyword_3_1_0());
								}
								(
									(
										lv_date_7_0=RULE_STRING
										{
											newLeafNode(lv_date_7_0, grammarAccess.getTestCaseAccess().getDateSTRINGTerminalRuleCall_3_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											setWithLastConsumed(
												$current,
												"date",
												lv_date_7_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_8='version'
								{
									newLeafNode(otherlv_8, grammarAccess.getTestCaseAccess().getVersionKeyword_3_2_0());
								}
								(
									(
										lv_version_9_0=RULE_STRING
										{
											newLeafNode(lv_version_9_0, grammarAccess.getTestCaseAccess().getVersionSTRINGTerminalRuleCall_3_2_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											setWithLastConsumed(
												$current,
												"version",
												lv_version_9_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_10='precondition'
								{
									newLeafNode(otherlv_10, grammarAccess.getTestCaseAccess().getPreconditionKeyword_3_3_0());
								}
								(
									(
										lv_precondition_11_0=RULE_STRING
										{
											newLeafNode(lv_precondition_11_0, grammarAccess.getTestCaseAccess().getPreconditionSTRINGTerminalRuleCall_3_3_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											setWithLastConsumed(
												$current,
												"precondition",
												lv_precondition_11_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>(otherlv_12='method'
								{
									newLeafNode(otherlv_12, grammarAccess.getTestCaseAccess().getMethodKeyword_3_4_0());
								}
								(
									(
										lv_testingMethod_13_0=RULE_STRING
										{
											newLeafNode(lv_testingMethod_13_0, grammarAccess.getTestCaseAccess().getTestingMethodSTRINGTerminalRuleCall_3_4_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											setWithLastConsumed(
												$current,
												"testingMethod",
												lv_testingMethod_13_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 5);
					}
								({true}?=>(otherlv_14='expectedResult'
								{
									newLeafNode(otherlv_14, grammarAccess.getTestCaseAccess().getExpectedResultKeyword_3_5_0());
								}
								(
									(
										lv_expectedResult_15_0=RULE_STRING
										{
											newLeafNode(lv_expectedResult_15_0, grammarAccess.getTestCaseAccess().getExpectedResultSTRINGTerminalRuleCall_3_5_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											setWithLastConsumed(
												$current,
												"expectedResult",
												lv_expectedResult_15_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 6);
					}
								({true}?=>(otherlv_16='actualResult'
								{
									newLeafNode(otherlv_16, grammarAccess.getTestCaseAccess().getActualResultKeyword_3_6_0());
								}
								(
									(
										lv_actualResult_17_0=RULE_STRING
										{
											newLeafNode(lv_actualResult_17_0, grammarAccess.getTestCaseAccess().getActualResultSTRINGTerminalRuleCall_3_6_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											setWithLastConsumed(
												$current,
												"actualResult",
												lv_actualResult_17_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 7);
					}
								({true}?=>(otherlv_18='passed'
								{
									newLeafNode(otherlv_18, grammarAccess.getTestCaseAccess().getPassedKeyword_3_7_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getTestCaseAccess().getPassedBooleanParserRuleCall_3_7_1_0());
										}
										lv_passed_19_0=ruleBoolean
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getTestCaseRule());
											}
											set(
												$current,
												"passed",
												lv_passed_19_0,
												"com.leonardo.ltl.LTL.Boolean");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 8);
					}
								({true}?=>(otherlv_20='incident'
								{
									newLeafNode(otherlv_20, grammarAccess.getTestCaseAccess().getIncidentKeyword_3_8_0());
								}
								(
									(
										lv_incident_21_0=RULE_STRING
										{
											newLeafNode(lv_incident_21_0, grammarAccess.getTestCaseAccess().getIncidentSTRINGTerminalRuleCall_3_8_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											setWithLastConsumed(
												$current,
												"incident",
												lv_incident_21_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 9)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 9);
					}
								({true}?=>(otherlv_22='postcondition'
								{
									newLeafNode(otherlv_22, grammarAccess.getTestCaseAccess().getPostconditionKeyword_3_9_0());
								}
								(
									(
										lv_postcondition_23_0=RULE_STRING
										{
											newLeafNode(lv_postcondition_23_0, grammarAccess.getTestCaseAccess().getPostconditionSTRINGTerminalRuleCall_3_9_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											setWithLastConsumed(
												$current,
												"postcondition",
												lv_postcondition_23_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 10)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 10);
					}
								({true}?=>(otherlv_24='inputs'
								{
									newLeafNode(otherlv_24, grammarAccess.getTestCaseAccess().getInputsKeyword_3_10_0());
								}
								(
									(
										lv_inputs_25_0=RULE_STRING
										{
											newLeafNode(lv_inputs_25_0, grammarAccess.getTestCaseAccess().getInputsSTRINGTerminalRuleCall_3_10_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
											addWithLastConsumed(
												$current,
												"inputs",
												lv_inputs_25_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								(
									otherlv_26=','
									{
										newLeafNode(otherlv_26, grammarAccess.getTestCaseAccess().getCommaKeyword_3_10_2_0());
									}
									(
										(
											lv_inputs_27_0=RULE_STRING
											{
												newLeafNode(lv_inputs_27_0, grammarAccess.getTestCaseAccess().getInputsSTRINGTerminalRuleCall_3_10_2_1_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getTestCaseRule());
												}
												addWithLastConsumed(
													$current,
													"inputs",
													lv_inputs_27_0,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 11)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestCaseAccess().getUnorderedGroup_3(), 11);
					}
								({true}?=>(otherlv_28='entities'
								{
									newLeafNode(otherlv_28, grammarAccess.getTestCaseAccess().getEntitiesKeyword_3_11_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestCaseRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getTestCaseAccess().getTestableEntitiesTestableEntityCrossReference_3_11_1_0());
										}
										ruleQualifiedName
										{
											afterParserOrEnumRuleCall();
										}
									)
								)*
								otherlv_30='end'
								{
									newLeafNode(otherlv_30, grammarAccess.getTestCaseAccess().getEndKeyword_3_11_2());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getTestCaseAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getTestCaseAccess().getUnorderedGroup_3());
				}
		)
		otherlv_31='end'
		{
			newLeafNode(otherlv_31, grammarAccess.getTestCaseAccess().getEndKeyword_4());
		}
	)
;

// Entry rule entryRuleTestExecution
entryRuleTestExecution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestExecutionRule()); }
	iv_ruleTestExecution=ruleTestExecution
	{ $current=$iv_ruleTestExecution.current; }
	EOF;

// Rule TestExecution
ruleTestExecution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='test'
		{
			newLeafNode(otherlv_0, grammarAccess.getTestExecutionAccess().getTestKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTestExecutionAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestExecutionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.leonardo.ltl.LTL.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='description'
								{
									newLeafNode(otherlv_3, grammarAccess.getTestExecutionAccess().getDescriptionKeyword_2_0_0());
								}
								(
									(
										lv_description_4_0=RULE_STRING
										{
											newLeafNode(lv_description_4_0, grammarAccess.getTestExecutionAccess().getDescriptionSTRINGTerminalRuleCall_2_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestExecutionRule());
											}
											setWithLastConsumed(
												$current,
												"description",
												lv_description_4_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_5='date'
								{
									newLeafNode(otherlv_5, grammarAccess.getTestExecutionAccess().getDateKeyword_2_1_0());
								}
								(
									(
										lv_date_6_0=RULE_STRING
										{
											newLeafNode(lv_date_6_0, grammarAccess.getTestExecutionAccess().getDateSTRINGTerminalRuleCall_2_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestExecutionRule());
											}
											setWithLastConsumed(
												$current,
												"date",
												lv_date_6_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>(otherlv_7='specification'
								{
									newLeafNode(otherlv_7, grammarAccess.getTestExecutionAccess().getSpecificationKeyword_2_2_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTestExecutionRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getTestExecutionAccess().getTestSpecificationsTestSpecificationCrossReference_2_2_1_0());
										}
										ruleQualifiedName
										{
											afterParserOrEnumRuleCall();
										}
									)
								)*
								otherlv_9='end'
								{
									newLeafNode(otherlv_9, grammarAccess.getTestExecutionAccess().getEndKeyword_2_2_2());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getTestExecutionAccess().getUnorderedGroup_2());
				}
		)
		otherlv_10='end'
		{
			newLeafNode(otherlv_10, grammarAccess.getTestExecutionAccess().getEndKeyword_3());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleBoolean
entryRuleBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	iv_ruleBoolean=ruleBoolean
	{ $current=$iv_ruleBoolean.current.getText(); }
	EOF;

// Rule Boolean
ruleBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanAccess().getFalseKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
