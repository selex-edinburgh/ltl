@namespace(uri="http://www.leonardo.com/ltf/LTF", prefix="ltf")

package ltf;

@GenModel(documentation="The root of the model")
class Model {
	@GenModel(documentation="The model can only contain packages")
	val Package[*] packages;
} 

@GenModel(documentation="A package groups entities required for testing")
class Package {
	val PackagableElement[*] packagableElements;
}

@GenModel(documentation="Everything that can go into a Package")
class PackagableElement {
	attr String name;
	attr String description;
}

@GenModel(documentation="This entity represents the execution of testing process")
class TestExecution extends PackagableElement {
	attr String date;	
	ref TestSpecification[*] testSpecifications;
	ref TestRequirement[*] testRequirements;
	ref TestableEntity[*] testableEntities; 
}

@GenModel(documentation="a Testable Entity is a concrete object able to be tested. This entity represents the entity that undergoes testing.")
class TestableEntity  extends PackagableElement {
	attr String version;
	ref TestSpecification[*] testSpefications;
}

@GenModel(documentation="A Test Requirement states what must be verified/validated of a Testable Entity based on the test basis.")
class TestRequirement extends PackagableElement  {
	attr String version;
	ref TestableEntity testableEntity;
}

@GenModel(documentation="A Test Specification is the concrete executable artefact to perform testing. It can be a TestCase or a TestSuite, a group of TestCase.")
abstract class TestSpecification  extends PackagableElement {
	attr String date;
	attr String version;
	ref TestableEntity[*] testableEntities;
	ref TestRequirement[*] testRequirements;  
}

@GenModel(documentation="A Test Suite consists of many test cases")
class TestSuite extends TestSpecification {
	val TestSpecification[*] testSpecifications;
}

@GenModel(documentation="A TestCase is the smallest executable unit of testing")
class TestCase extends TestSpecification {
	attr String precondition;
	attr String testingMethod;
	attr Object[*] inputs;
	attr Object expectedResult;
	attr Object actualResult;
	attr boolean passed = true;
	attr String incident;
	attr String postcondition;
}
