grammar org.leonardo.ltl.LTL with org.eclipse.xtext.common.Terminals

generate lTL "http://www.leonardo.org/ltl/LTL"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore


//Greeting:
//	'Hello' name=ID '!';
	
Model:
	{Model} package += (Package)*;
	
Package:
	'package' name=QualifiedName
		(description = STRING)?
        (testings += Testing 
        	| testableEntities += TestableEntity 
        	| testRequirements += TestRequirement
        	| testSpecifications += TestSpecification
			| testingMethods += TestingMethod
        )*
    'end';

QualifiedName hidden():
    ID ('.' ID)* ;
    
Testing:
	'testing' name=QualifiedName
	(description = STRING)?
	(activities += TestingActivity)* 
	(requirements += TestRequirement)*
	(entities += TestableEntity)*
	'end' 
;	


TestingActivity:
	TestingDesign | TestingRealisation | TestingAnalysis
;

TestingDesign:
	'design' name=QualifiedName
	(description = STRING)?
	('method' methods += [TestingMethod|QualifiedName])*
	'end' 
;

TestingRealisation:
	'realisation' name=QualifiedName
	(description = STRING)?
	('method' methods += [TestingMethod|QualifiedName])*
	'end' 
;

TestingAnalysis:
	'analysis' name=QualifiedName
	(description = STRING)?
	('method' methods += [TestingMethod|QualifiedName])*
	('spec' testSpecifications += [TestSpecification|QualifiedName])*  
	'end' 
;

TestableEntity:
	'entity' name=QualifiedName
	(description = STRING)?
	'end' 
;
    
TestRequirement:
	'requirement' name=QualifiedName
	(description = STRING)?
	'end' 
;

TestSpecification:
	TestSuite | TestCase
;

TestSuite:
	'suite' name=QualifiedName
	(description = STRING)?
	(testCases += TestCase)*
	'end' 
;

TestCase:
	'case' name=QualifiedName
	(description = STRING)?
	'pre' (precondition = STRING)?
	'post' (postcondition = STRING)?
	('input' inputs += STRING)*
	('expect' expects += STRING)*
	'end' 
;


TestingMethod:
	'method' name=QualifiedName
	(description = STRING)?
	'end' 
;
